AWSTemplateFormatVersion: "2010-09-09"
Description: "不要RDSスナップショット検知"

Parameters:
  EndPointEmail:
    Description: Enter the email address to be notified
    Type: String
  S3BacketName:
    Description: Enter the S3Backet name uploaded Lambda code file
    Type: String
  LambdaCodeFileName:
    Description: Enter the Lambda code file name uploaded to S3
    Type: String
    Default: DataCheckAvailableEBS.zip

Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: DataCheckAvailableEBS
      Handler: DataCheckAvailableEBS.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.11
      Timeout: 3
      Code:
        S3Bucket: !Ref S3BacketName
        S3Key: !Ref LambdaCodeFileName
      Environment:
        Variables:
          SNS_TOPIC: !Ref SNSTopic

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: DataCheckAvailableEBS

  EmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn: !Ref SNSTopic
      Endpoint: !Ref EndPointEmail

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeVolumes
                  - ec2:DescribeVolumeStatus
                  - ec2:DescribeVolumeAttribute
                  - sns:Publish
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:FilterLogEvents
                Resource: '*'

  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/DataCheckAvailableEBS
      RetentionInDays: 1

  ErrorLogFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref LambdaLogGroup
      FilterPattern: "ERROR"
      MetricTransformations:
        - MetricName: /aws/lambda/DataCheckAvailableEBSError
          MetricNamespace: DataCheckAvailableEBS
          MetricValue: 1
          DefaultValue: 0

  ErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: MyErrorAlarm
      AlarmDescription: "Lambda Error Alarm"
      Namespace: DataCheckAvailableEBS
      MetricName: /aws/lambda/DataCheckAvailableEBSError
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SNSTopic

  EventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: DataCheckAvailableEBS
      Description: "Lambdaを毎日5:00に実行"
      ScheduleExpression: cron(0 20 * * ? *) #UTC指定のため20時実行に設定
      State: ENABLED
      Targets:
        - Arn: !GetAtt LambdaFunction.Arn
          Id: DataCheckAvailableEBS

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRule.Arn